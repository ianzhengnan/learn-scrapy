

import re

# line = "bobby123"
# line = "booobbbaaaaaaaby123"


# regex_str = "^b.*"  # .表示任意字符，*表示前面的字符可以重复任意多次也可以是0次
# regex_str = "^b.*3$"  # 3$表示必须以3结尾

#   regex_str = ".*(b.*b).*"
# 上面正则表达式想要提取boooooooobby123中的boooooooob，()表示提取子串 这个正则表达式的意思是：可以匹配xxxxxbxxxxxbxxxx
# 结果却是bb,因为它是从右边开始匹配的，看到第一个b,就去匹配第二个b，满足条件就不再往左匹配了
#   regex_str = ".*?(b.*b).*"
# 改成如上的正则表达式则，它在第一个b 前加了一个？让它从左边开始匹配
# 但是它的结果是boooooooobb，还是没有满足我们的要求
#   regex_str = ".*?(b.*?b).*"
# 得出了满意的答案：boooooooob，就是在后面的b前加？好，让它不要再进行贪婪匹配了，匹配到一个就可以了

# regex_str = ".*(b.+b).*" # + 它和*号都是出现次数的限定词，区别是+表示至少出现一次, 而0则表示出现0次或多次

# regex_str = ".*(b.{2,5}b).*"  # {n}也表示出现次数限定词，表示只出现n次. 如果是{n,m}则表示这个字符最少出现n次，最多出现m次.
                              # 它都是先从右边开始匹配，如果从右边匹配不到，则从左边开始匹配
                              # {2,}代表>=2次
# line = "bobby123"
# regex_str = "(bobby123|bobby)"  # | 表示或者的意思,因为后面要使用group(1)来提取匹配的字符串，这里需要加上（）如果前面的满足则不会再看后面的选项
# regex_str = "(bobby|boobby)123"
# regex_str = "((bobby|boobby)123)" # 这里group(1)是匹配的bobby123, group(2)对应的是里面那个括号里的内容

# regex_str = "([abcd]obby123)" # 表示[abcd]中任意一个字符都匹配

# line = "13762637898"
# regex_str = "(1[34568][0-9]{9})"  # 表示 1 + [34568]中任意一个数字 + [0-9]0到9的任何一个数字，且这个数字要出现9次
# regex_str = "(1[34568][^1]{9})"  # 表示 1 + [34568]中任意一个数字 + [^1]不等于1的任意一个字符（可以不是数字），且这个数字要出现9次
                                # []中的特殊字符也会失去特殊作用，比如[.*]就是表示.或者*这两个字符中的一个，不是表示任意多个字符


# line = "你好"
# regex_str = "(你\s好)"  # \s代表一个空格
# regex_str = "(你\S+好)"  # \S表示除空格以外的其他一个字符，不是多个；但是如果是\S+ 就可以了，它表示至少一个，也可以是多个

# regex_str = "(你\w好)"  # \w等同于：[A-Za-z0-9_]里的任意一个字符都匹配
# regex_str = "(你\W好)"  # \W跟\w正好相反，不等同于：[A-Za-z0-9_]里的任意一个字符才匹配，比如"你-好" 或者 "你 好"

# line = "哇咔s咔s" # 只能匹配到哇咔
# regex_str = "([\u4E00-\u9FA5]+)" # 可以匹配任意长度的汉字，当然不能为空，汉字后面可以加英文(只能匹配到s)

# line = "study in 南京科技大学"
# regex_str = ".*?([\u4E00-\u9FA5]+大学)"  # 可以提取"line = "study in 南京科技大学""里的南京科技大学， 如果不加?表示贪婪匹配，只能匹配到'技大学'

# line = "XXX出生于2001年" # 要提取2001
# regex_str = ".*(\d{4})年"  # \d表示任意一个数字, 第一种方法：只取4个字符
# regex_str = ".*?(\d+)年"  # \d表示任意一个数字，第二种方法：用?取消贪婪匹配, 也可以达到目的（这种用的多）


# 一个提取出生日期的例子
line = "XXX出生于2001年6月1日"
line = "XXX出生于2001/6/1"
line = "XXX出生于2001-6-1"
line = "XXX出生于2001-06-01"
line = "XXX出生于2001-06"

regex_str = ".*出生于(\d{4}[年/-]\d{1,2}([月/-]\d{1,2}|[月/-]$|$))"  #月份这里讲解：([月/-]\d{1,2}|[月/-]$|$)表示
                                                                # 或者是 月/-中任意一个 + 一位或两位的数字，
                                                                # 或者是 月/-中任意一个 + 结尾符号
                                                                # 或者是 结尾符号

match_obj = re.match(regex_str, line)

if match_obj:
    print(match_obj.group(1))


